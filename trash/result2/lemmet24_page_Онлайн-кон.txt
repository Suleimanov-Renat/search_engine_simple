онлайн-концерт в облако ресурс appleinsiderru запускать новый не иметь аналог в российский интернетом-сегмент проект по онлайн-трансляция живой выступление как молодая музыкальный коллектив так и именитый музыкант периодичность мероприятие — около 2-х трансляция в месяц первопроходец 6 декабрь стать фёдор чистяков & f4band (экс-солист группа ноль) в время прямой эфир быть около 300 человек который смочь оценить чистый студийный звук и атмосфера живой концерт для этот трансляция компания clodo выделить мы свой мощность и канал ширина 500 мегабит/секунда для довольно качественный битрейт поток в 128 килобит/секунда это означать 4000 клиент «в вакууме» мы предполагать что прийти до 2000 слушатель и перестраховаться однако на этот раз не удаться достигнуть договорённость с партнёр и наш оценка аудитория оказаться сильно занизить попытка привести заинтересовать народ с хабра закончиться баном хабратоварищ dudlik тем не менее мы довольно успешно удаться провести концерт вкратце о технический реализация — мы использовать программа icecast2 на несколько сервер с балансировка нагрузка с помощь самописный bash-скрипт дробный под кат технический реализация чтобы воспользоваться возможность хостинг мы нужно быть создать 5 инстанс каждый из который выделяться по 100 мегабит/секунда общий схема взаимодействие система выглядеть так: у мы иметься один сервер на который транслироваться поток-источник (ведущий и музыканты) а тот уже занимался: 1) собственно трансляция поток для клиентов; 2) ретрансляция (relay) на другой сервер для раздача аудиопоток мы использовать icecast2 из репозиторий ubuntu 1004 вкратце вот список пакет который прийтись установить на сервер трансляции: g++ libmp3lame-dev libshout3-dev icecast2 libperl-dev libmp3-info-perl когда поток-источник отсутствовать на первое сервер в эфир идти ротация музыка из определённый каталог формироваться nonstop-поток с помощь ices 04 который мы собрать из исходников: wget http://downloadsusxiphorg/releases/ices/ices-04targz tar -zxvf ices-04targz cd ices-04 /configure --with-perl make make install музыка храниться в каталог /home/ftp а id3-тег из они вытаскиваться с помощь perl-модуль взять отсюда (длить это мы собирать ices с ключ --with-perl) конфига /usr/local/etc/icesconf: <?xml version="10"?> <ices:configuration xmlns:ices="http://wwwicecastorg/projects/ices"> <playlist> <randomize>1</randomize> <type>perl</type> <module>ices</module> <crossfade>5</crossfade> </playlist> <execution> <background>0</background> <verbose>0</verbose> <basedirectory>/tmp</basedirectory> </execution> <stream> <server> <hostname>air1appleinsiderru</hostname> <port>1976</port> <password>sourcepassword</password> <protocol>http</protocol> </server> <mountpoint>/nonstop</mountpoint> <name>appleinsiderru radio</name> <genre>not specified</genre> <description>music from our listeners</description> <url>http://wwwappleinsiderru/ipodcast/</url> <public>1</public> <bitrate>128</bitrate> <reencode>1</reencode> <samplerate>44100</samplerate> <channels>2</channels> </stream> </ices:configuration> вот наиболее интересный место конфига первое сервер (секция paths logging security я опустил) файл /etc/icecast2/icecastxml: <icecast> <limits> <clients>1000</clients> <sources>6</sources> <queue-size>524288</queue-size> <client-timeout>30</client-timeout> <header-timeout>15</header-timeout> <source-timeout>10</source-timeout> <burst-on-connect>1</burst-on-connect> <burst-size>65535</burst-size> </limits> <authentication> <source-password>sourcepassword</source-password> <relay-password>relaypassword</relay-password> <admin-user>admin</admin-user> <admin-password>adminpassword</admin-password> </authentication> <hostname>air1appleinsiderru</hostname> <listen-socket> <port>1976</port> </listen-socket> <mount> <mount-name>/nonstop</mount-name> <charset>utf8</charset> </mount> <mount> <mount-name>/air</mount-name> <max-listeners>600</max-listeners> <charset>utf8</charset> <fallback-mount>/nonstop</fallback-mount> <fallback-override>1</fallback-override> </mount>    </icecast> конфига два и последующий сервер обращать особый внимание на секция relay и mount: <icecast> <limits> <clients>1000</clients> <sources>6</sources> <queue-size>524288</queue-size> <client-timeout>30</client-timeout> <header-timeout>15</header-timeout> <source-timeout>10</source-timeout> <burst-on-connect>1</burst-on-connect> <burst-size>65535</burst-size> </limits> <authentication> <relay-password>relaypassword</relay-password> <admin-user>admin</admin-user> <admin-password>adminpassword</admin-password> </authentication> <hostname>air2appleinsiderru</hostname> <listen-socket> <port>1976</port> </listen-socket> <relay> <server>air1appleinsiderru</server> <port>1976</port> <mount>/air</mount> <local-mount>/air</local-mount> <username>relay</username> <password>relaypassword</password> <on-demand>0</on-demand> </relay> <mount> <mount-name>/air</mount-name> <max-listeners>600</max-listeners> <charset>utf8</charset> </mount>    </icecast> такой образ при старт icecast2 на второе и следующий сервер они автоматически подключаться к точка монтирование /air первое сервер копировать он «на лету» и начинать раздавать в свой одноимённый точка монтирование /air на каждый сервер мы ввести ограничение в 600 слушатель тот в идеальный случай канал каждый сервер задействоваться бы на 75% распределение нагрузка теперь о тот как мы равномерно распределять нагрузка (хотеть как оказаться это и не потребовалось) слушатель мочь попасть на онлайн-концерт два способами: либо через веб-плеер открыть страничка podcastappleinsiderru и нажать на кнопка play либо скопировать ссылка вид airappleinsiderru/applem3u на тот же страница и «скормив» она свой любимый десктопному/мобильный плеер в первое случай балансировка осуществляться случайно — когда клиент открывать страничка с веб-плеер (кстати он у мы построить на jplayer) то с помощь javascript генерироваться случайный число от 1 до 5 и поток браться с соответствующий сервер (air1-air5) в второе случай тот когда пользователь отдавать m3u-ссылка свой плеер происходить следующий вообще когда у icecast2 запрашивать ссылка вид server/mountm3u он сначала искать файл /usr/share/icecast2/web/mountm3u и если находить отдавать он мы оставаться лишь правильно формировать этот файлик мы попросту раз в минута по крон опрашивать нагрузка каждый из сервер обновлять суммарный статистика и заново перенаправлять символьный ссылка applem3u на один из заранее заготовить файл к пример для первое сервер этот файл содержал: http://air1appleinsiderru:1976/air вот собственно bash-скрипт: #!/bin/sh total=0 imin=1 min=100 # собирать нагрузка (те количество слушателей) каждый сервер # для это опрашивать служебный страничка и парсим она for num in `seq 1 5`; do data=`curl --silent http://air$numappleinsiderru:1976/status2xsl` air=`echo $data | sed 's/*\/air//' | cut -d"" -f4` nonstop=`echo $data | sed 's/*\/nonstop//' | cut -d"" -f4` if [ "x${air}" = "xcurrent listeners" ]; then air=0 fi if [ "x${nonstop}" = "xcurrent listeners" ]; then nonstop=0 echo "air$num : $air" else if [ "x${nonstop}" = "x0" ]; then echo "air$num : $air" else echo "air$num : $air / $nonstop" fi fi # now - нагрузка сервер под номер num now=`expr $air + $nonstop` # total - суммарный нагрузка total=`expr $total + $now` # определять номер наименее нагрузить сервер if [ $now -lt $min ]; then min=$now imin=$num fi done echo "-------------------" echo "total: $total" # обновлять статистика на веб-страничка трансляция echo $total > stattxt scp stattxt podcast:/var/www # обновлять m3u-файл echo airm3u --\> http://air$iminappleinsiderru:1976/air ssh air1 ln -sf /usr/share/icecast2/web/airm3u_$imin /usr/share/icecast2/web/airm3u echo "server $imin is on duty" согласный он немного топоровый зато рабочий если есть предложение по улучшение с радость выслушать итог вот график объём аудитория в время онлайн-трансляция 280 человек в пике: подписаться на подкаста и скачать запись онлайн-концерт можно тут: rss | mp3 | itunes следующий мероприятие планироваться на 25 декабрь о он участник пока говорить не быть тк переговоры находиться в самый активный стадия весь подробность и анонс можно быть узнать на appleinsiderru 
интервью без сучка и задоринки: как программист успешно пройти собеседование пост подготовить специально для корпоративный блог wirex — компания предлагать удобный мобильный финансовый приложение для управление личный счёт изначально статья задумываться как подготовительный материал который автор отправлять свой кандидат но в итог последний решить опубликовать он в открытый источник а мы посчитать тема интересный сделать перевод для вы уважаемый читатель тот факт что вы являться хороший программист играть поразительно малый роль при прохождение собеседование для тот чтобы ваш работа быть продуктивный вы нужно уметь решать огромный склонный разрастаться проблема неделя и месяцами каждый вопрос на собеседование напротив длиться менее один час для тот чтобы хорошо показать себя на интервью вы должный знать как быстро решать небольшой проблема под давление при это ясно излагать свой мысль это совершенно другой умение (в то же время я не говорить что способность с лёгкость решать задача на собеседование не иметь никакой связь с навык программирование просто этот связь выразить куда слабый чем считать многие компания и именно другой фактор отличный от специализировать умение объясняться столь внушительный расхождение) более тот человек проводить собеседование часто делать это непрофессиональный и несколько рассеянно (онить бы сам предпочесть вместо собеседование заниматься программированием) и поэтому задавать вопрос не связанный с фактический рабочий процесс в итог по ход интервью кандидат сталкиваться с предвзятый отношение недостаток стандартизация и вопрос по сопоставление с образец быть управлять компания который заниматься подбор персонал я хорошо это понимать мы проводить собеседование с инженер не изучать они резюме и по ускоренный процедура направлять они непосредственно на дальнейший интервью в другой компания бизнес-инкубатор y combinator за последний девять месяц мы собеседовать 1000 программист особый внимание мы обращать на практический программирование и позволять кандидат выбрать один из семь способ оценивание это означать что мы работать с многий (очень талантливыми) программист который не закончить даже элементарный программа обучение компьютерный наука многие из этот человек плохо показывать себя на собеседование с огромный разрастаться проблема они иметь дело каждый день но 45-минутный алгоритм вызывать у они трудность хорошо то что прохождение собеседование — это тот навык который мочь быть освоить мы успешно обучать кандидат чтобы они мочь проходить собеседование с хороший результат на самый же дело качество который мы приписывать относительно подготовка кандидат проходить интервью в компания yc — это не чистый талант а скорее усердие по больший счёт я убедить что хороший программист не обязать овладевать специальный навык помогать успешно пройти собеседование но ничто не поделать с сложиться положение вещий тем время если вы хотеть произвести хороший впечатление на собеседование то этот пост рассказать вы о тот как на наш взгляд наиболее эффективно добиться это 1 проявлять энтузиазм энтузиазм иметь огромный влияние на результат собеседование около 50% наш кандидат не прошедшее дальнейший интервью в компания провалить они не по технический причина обычно компания объяснять это тем что человек «не вписываться в культура компании» однако в девять из десять случай «вписаться в культуру» — это проявить энтузиазм в тот чем заниматься предприятие компания нанимать человек который проявлять живой интерес к они миссия для многий это так же важный как и технический знание и в это есть смысл мотивированный сотрудник быть чувствовать себя счастливый и работать усердный проблема в тот что это мочь быть наиграть некоторый кандидат умудряться убедить каждый компания в который проходить собеседование что только о этот работа они весь жизнь и мечтать в то время как другой (искренне мотивированный и заинтересовать работой) не мочь донести свой истинный стремление мы снова и снова встречаться с это решение здесь один для весь — научиться показывать свой энтузиазм это не значит что вы позволить обманывать собеседование — это как первое свидание никто не хотеть на первое свидание слышать что он являться лишь один вариант из множество даже несмотря на то что обычно так и есть так и здесь большинство программист просто хотеть иметь хороший работа с достойный зарплата но начинать с это интервью не следовать хороший всего перед собеседование подготовить заметка о тот что вы нравиться в компания и упоминать о это когда человек который проводить собеседование спросить есть ли у вы вопрос хороший источник идея мочь быть прочтение недавний пост в блог компания и пресс-релиз тогда вы мочь упомянуть тот материал который показаться вы наиболее интересный этот идея кажется довольно поверхностный я думать что читать это вы и сам соглашаться но (и каждый кто когда-либо проводить собеседование сказать вы то же самое) процент кандидат который делать это поразительно маленький если вы внимательно подготовить запись о тот почему вы находить компания интересный то это действительно увеличить вероятность ваш прохождение вы мочь даже ссылаться на свой запись по ход собеседование — это показать то что вы готовиться 2 изучить термин часто встречаться на собеседование огромный процент задавать на собеседование вопрос касаться структура дать и алгоритм это правда мы собирать у кандидат информация о вопрос задавать на собеседование в компания yc и более 70% вопрос касаться именно алгоритм вы не нужно быть эксперт но знание расположить ниже список алгоритм и структура дать помочь вы получить работа в большинство компания хеш-таблица связанный список поиск в ширина поиск в глубина быстрый сортировка сортировка слияние бинарный поиск 2d множество динамический массив двоичный дерево поиск динамический программирование big-o анализ в зависимость от ваш образование и ранее выполнять работа этот список мочь оказаться простой либо абсолютно пугать этот понятие гораздо чаща встречаться на собеседование нежели в действительность в веб-программирование если вы самоучка или давно закончить учебный заведение и этот понятие вы незнакомый то вы следовать изучить они для успешный прохождение собеседование даже если весь это для вы не ново то освежить знание весь равно не помешать поразительно большой процент вопрос на собеседование сводиться к поиск в ширина или использование хэш-таблица для подсчёт уникальный элемент вы должный уметь написать алгоритм bfs и понимать как задействоваться хэш-таблица выучить весь это не так сложно как предполагать многие человек с который мы говорить алгоритм обычно объясняться научный язык и это мочь сбивать с толк но по суть свой ничто из это список не сложный чем архитектура современный веб-приложение если вы мочь (хорошо) построить веб-приложение то вы смочь выучить и это с свой сторона я мочь порекомендовать книга стивен скиена (steven skiena) под название «алгоритм руководство по разработке» (the algorithm design manual) данный материал замечательный излагаться в 3-5-ть глава — просто и доступно да в книга использоваться с и математический синтаксис но она отлично раскрывать тема на coursera также можно найти несколько хороший курс по алгоритм в это курс в частность уделить внимание понятие знание который важный при собеседование изучение алгоритм и структура дать помогать не только потому что материал необходимый для успех на собеседование но также и потому что подход к проблема взять в курс алгоритм являться тем же самый подход который работать хороший всего в собеседование изучение алгоритм помочь вы получить правильный мышление для прохождение собеседование 3 пользоваться помощь свой интервьюер интервьюер помогать кандидат они давать намёк реагировать на идея и обычно руководить ход собеседование но они не помогать весь кандидат одинаково некоторый программист в состояние получить значительный помощь такой образ что человек который проводить собеседование не поставить это имя в укор другой же осуждаться за любой намёк который они получать поверьте вы хотеть чтобы вы помочь это зависеть от тот как развиваться общение если собеседовать вы человек нравиться ваш подход и вы находить с он общий язык то он быть рад помочь вы вы мочь добиться это выработать определённый алгоритм прохождение собеседование я рекомендовать следующий шаги: задавать вопрос обговаривать решение задача «в лоб» обговаривать оптимизировать решение писать код после тот как вы задать вопрос начинать с определение тот о чем именно вы спрашивать это как раз тот момент когда вы должный быть педантичный уточнить весь неясность который вы находить спросить о пограничный случай привести конкретный пример для начало решение задача и убедиться что вы верно понять какой конечный результат от вы ожидать задавать вопрос даже если вы практически уверить в ответ это полезно потому что давать вы возможность выяснить пограничный случай и получить весь дать необходимый для решение задача (умение кандидат «работать» с пограничный случай — один из ключевой аспект который интервьюер принимать в внимание для общий оценка провести собеседования) к тот же это давать вы время на то чтобы собраться с мысль до тот как вы начать решать проблема далее вы должный говорить о самый простой решение проблема который только приходить вы на ум вы должный говорить а не браться сразу же за написание код потому при словесный объяснение свой идея вы мочь быстрый ответить на вопрос и перейти к следующий и это большой задействовать самый интервьюер который в свой очередь мочь помочь направлять вы если же вы сразу перейти к написание код то потерять этот возможность кандидат зачастую пропускать один шаг считать что самый простой решение проблема слишком очевидно либо ошибочно это неправильно убеждаться в тот что вы всегда находить решение поставить перед вы проблема (дажа если нужно задействовать экспоненциальный время или суперкомпьютер nsa) после тот как вы описать такой простой решение спросить интервьюер хотеть ли он реализовать он или вы следовать придумать более целесообразный решение как правило вы попросить о последний что касаться более целесообразный решение то излагать свой мысль как и в один раз опять же разговаривать а не писать код и забрасывать интервьюер идея можно надеяться что вопрос быть похожий на что-либо уже видеть вы и вы быть знать ответ на он если же нет то стоить подумать над тем с какой наиболее похожий на данный случай проблема вы сталкиваться и на основа это построить свой ответ большинство вопрос на собеседование связать с немного завуалированный приложение классический cs алгоритм нередко интервьюер быть подводить вы к это алгоритм но только если вы сам начать этот процесс и наконец после тот как и вы и собеседовать вы согласный с тем что у вы есть хороший решение следовать приступать к написание код в зависимость от компания вы быть писать код либо компьютер либо на доска но поскольку решение у вы уже есть стоящий перед вы задача не должный выглядеть что-то замысловатый для дополнительный балл спросить ваш интервьюер хотеть ли он чтобы вы написать тест 4 говорить о вариант решение интервью на должность программист обычно состоять из вопрос связанный с непосредственно с программирование и именно о они я рассказывать ранее в этот статья в то же время вы мочь встретиться с вопрос по создание определённый система компания судить по весь склонный к тот чтобы «помучить» такой образ более опытный кандидат в это случай потенциальный работник спрашивать какой образ они бы разработать тот или иной сложный система для применение на реальный дать в качество пример использоваться разработка карта google соцсеть или же например создание api для банка первое наблюдение: ответ на вопрос связанный с разработка такой система требовать специфический знание никто не потребовать от вы создание карта google (этый занять куча время у множество людей) в то же время интервьюер ожидать от кандидат какой-то понимание базовый принцип разработка такой система не волноваться обычно весь подобный вопрос относиться к бекэнд поэтому вы мочь достигнуть значительный прогресс если хорошо усвоить соответствующий информация вот неполный список тот что рекомендоваться изучить перед собеседованием: http (на уровень протоколов) база дать (индекс планирование запросов) сеть доставка контент (cdn) работа с кэш (lru-кэш memcached redis) система балансировка нагрузка распределенный система воркер вы нужно не только изучить этот термин но и понять как они взаимодействовать друг с друг формировать реальный система хороший способ для изучение этот понятие — это почитать о тот как другой программист внедрять этот инструмент блог high scalability как нельзя хороший подходить для такой чтение данный ресурс публиковать детальный материал о конкретный бэкенд-архитектура в тот или иной существующий компания такой образ вы мочь узнать как каждый решение из список выше использоваться в реальный система как только вы закончить с чтение ответ на вопрос по создание такой система превратиться для вы в последовательный выполнение задать алгоритм начать с самый высокий уровень и затем постепенно спускаться вниз на каждый уровень расспрашивать интервьюер о требование (нужный ли вы представить простой начальный этап разработка или же следовать рассказать как быть выглядеть полноценный система?) и говорить о несколько вариант (например можно использовать идея почерпнуть из онлайн-материалов) обсуждение различный вариант и компромисс в ход решение задача — это ключ к успех для человек который проводить собеседование на самый дело не так важный суметь ли вы построить добротный система куда большой он интересовать то насколько уметь вы мочь рассуждать о поиск оптимальный решение анализировать преимущество и недостаток предложить вариант практиковать такой разговор 5 подчёркивать результат свой работа три вид вопрос с который вы мочь столкнуться на собеседование касаться ваш профессиональный опыт здесь интервьюер обычно просить кандидат рассказать о завершить проект ошибка многий программист состоять в тот что они рассказывать исключительно о технический сторона тот или иной проект так большинство специалист рассказывать о успешный внедрение нейросетевой классификатор или реализация бот для проверка грамматика в twitter это не хороший выбор потому что человек который проводить собеседование очень трудно судить о масштаб проект многие кандидат рассказывать о различный сторонний проект преувеличивать они значимость и у интервьюер нет никакой возможность проверить слышать ли он правда или красивый ложь в это случай оптимальный решение — выбрать какой-то проект который показать конкретный результат и подчеркнуть они здесь часто приходиться пожертвовать более интересный (технический точка зрения) проект но поверьте это тот стоить подумать (заранее) о тот проект который показать наиболее «осязаемые» результат в реальный мир если вы создать игра под ios и она набрать 50 тысяча скачивание именно этот цифра стоить озвучить или например вы проходить стажировка в какой-либо компания написать интерфейс для доступ в «админку» который впоследствии решить быть использовать для работа весь администратор факт использование результат ваш деятельность — это отличный повод рассказать о ваш достижение кроме тот выбор более «технического» проект при ответ на вопрос о свой прошлое достижение посылать компания информация о тот что вы сфокусировать на самый работа программист который большой интересовать «техническая» сторона каждый проект а не достигнутый результат обычно отсеиваться на начальный этап подбор персонал (считаться что порой такой специалист недостаточно продуктивны) 6 использовать динамический язык программирование но обязательно упомянуть c я рекомендовать чтобы на собеседование вы использовать такой динамический язык как python ruby или javascript конечно же вы следовать использовать люба язык который вы знаете хороший всего но мы обнаружить что многие интервьюер предпочитать c c ++ или java почему-то считать что именно они являться «настоящими» язык программирование несколько классический книга по прохождение собеседование рекомендовать чтобы программист выбрать java или c ++ но мы кажется что по крайний мера для стартап это — плохой совет кандидат добиваться больший успех использовать динамический язык на мой взгляд это происходить благодаря они компактный синтаксис гибкий типизация а также литерал список и хэш это нестрогий язык программирование с они мочь возникнуть определённый трудность при создание сложный система (что также являться очень спорный вопросом) но они хороший когда вы пытаться влепить прямо на доска алгоритм бинарный поиск независимо от тот какой язык вы использовать стоить упомянуть что вы работать и с другой язык компания иметь предубеждение относительно специалист владеть только один язык программирование если же вы знаете только один язык вы должный полагаться на то что вы действительно круто имя владеть но если вы когда-то сделать что-либо для основный или сторонний проект на несколько язык обязательно сказать о это не собеседование если вы работать с такой машинно-ориентировать язык как c c++ go или rust то упоминание о это особенно важный язык java c# и php в какой-то мера являться проблематичный мы обнаружить что у стартап есть некоторый предубеждение относительно этот язык у мы есть дать который показывать что программист использовать этот язык на собеседование получать более низкий оценка это несправедливый но это правда если у вы есть другой вариант я рекомендовать не использовать этот язык на собеседование в стартап 7 практиковаться практиковаться и ещё раз практиковаться вы смочь хороший выглядеть на собеседование если заранее быть репетировать ваш ответ весь потому что любой собеседование — это стресс а стресс негативно влиять на то как вы себя преподавать решение один — практика собеседование становиться менее трудный когда вы приобретать опыт в это дело и с время к он привыкать мы часто замечать что один интервью кандидат (дажа в рамка один поиск работы) оказываться неудачный однако затем они обретать уверенность и хороший выглядеть на интервью есть вы нелегко побороть стресс то я рекомендовать начать с инициирование собеседование найти список вопрос для собеседование (рекомендовать книга cracking the coding interview на российский рынок известный под название «карьер программист как устроиться на работа в google microsoft или другой ведущий it-компанию») и проработать они установить таймер уделять на каждый вопрос по 20 минута и стараться ответить на он как можно быстрый потренироваться писать ответ на доска (не весь компания это требовать но это самый плохой вариант который стоить отработать) лист бумага и ручка мочь послужить вы для симуляция доска если у вы есть друг который мочь помочь вы потренироваться проходить собеседование то это замечательный вы мочь собеседовать друг друг по очередь чтение задавать на интервью вопрос также дать вы неплохой идея который вы мочь воспользоваться в время реальный собеседование на удивление очень много вопрос использоваться повторно (целиком или частично) даже опытный (и не подверженный стрессу) кандидат извлечь из это выгода прохождение собеседование — это навык который существенно отличаться от работа программист и этот навык мочь атрофироваться но опытный программист часто (и обоснованно) чувствовать что имя не стоить готовиться к интервью они учиться маленький именно поэтому более молодая кандидат часто фактически хороший отвечать на вопрос нежели опытный кандидат компания знать это и как это ни парадоксально некоторый сообщать мы что для опытный кандидат они устанавливать более низкий проходная порог ответ на вопрос о программирование 8 упомянуть о свой послужной список послужной список изначально очень важный для интервьюер наш кандидат который ранее работать в ведущий компания или учиться в хороший учебный заведение успешно проходить собеседование на 30% чаща нежели тот который не мочь это похвастаться (актуально для определённый уровень квалификация по результат исследование не учитывать громкий название компания из резюме кандидатов) я это не нравиться это не отвечать принцип меритократия и это полный отстой но если в ваш послужной список нечто подобный иметься то в ваш же интерес сообщить о это интервьюер вы не должный слепо полагаться на то что они прочитать ваш резюме 9 собирать сделать вы предложение работа если вы когда-нибудь почитать совет по привлечение инвестиция для основатель то вы узнать о тот что самый трудный — это получить предложение от первое инвестор как только вы он получить то посыпаться и другой это же правило применимый и к предложение работа если у вы уже есть предложение работа то не забыть упомянуть о это на интервью — это оказывать сильный влияние на интервьюер склонять он в ваш польза и поэтому стоить воспользоваться следующий стратегией: сделать список интересовать вы компания и назначать время собеседование в обратный порядок относительно степень ваш интерес тогда то что вы неплохо себя показать ранее поздний увеличить ваш шанс получить работа который для вы интересный всего вы определённо стоить так сделать заключение прохождение интервью являться навык если вы замечательный программист — отлично но это недостаточно весь когда-нибудь проваливать интервью и должный подготовка мочь помочь каждый увеличить вероятность успех энтузиазм чрезвычайно важный и для тот чтобы научиться правильно показывать он вы стоить попрактиковаться из-за недостаток энтузиазм на собеседование терпеть неудача столько же программист сколько проваливаться по технический причина интервьюер помогать кандидат в время интервью и если вы быть правильно вести себя и правильно общаться то они обязательно вы помочь практика всегда помогать чтение большой количество задавать на собеседование вопрос и приучение самый себя к испытывать на собеседование стресс обеспечить вы успех и получение больший количество предложение работа это не идеальный ситуация подготовка к собеседование давать свой плод но на обучение программист умение который не относиться к создание качественный софт тратить время каждый сторона принимать участие в процесс подбор персонал компания следовать усовершенствовать процесс проведение собеседование уменьшить влияние академический знание в область информатика заученный факт и отрепетировать действие но реальный положение вещий сейчас отличаться от тот к который мы стремиться поэтому программист должный уметь правильно подготовиться к собеседование перевод подготовить компания wirex подписываться на наш статья — впереди читатель geektimes ждать ещё много интересного! надеяться на скорый встреча в блог wirex и не забыть заказать наш карта 
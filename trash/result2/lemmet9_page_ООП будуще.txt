ооп будущего: барух садогурский и егор бугаенко о тот как мы быть программировать через 20 год концепция объектно-ориентированный программирование восприниматься разработчик по-разному: кто-то говорить что она уже пора на свалка истории; кто-то кодить и не задумываться о тот что как и почему он делает; а кто-то пытаться работать в «pure oop» парадигма переворачивать классический паттерн с нога на голова в преддверие joker 2016 мы попросить барух садогурский обсудить судьба java и ооп с егор бугаенко что из это получиться слушать в аудиоформат или смотреть в видео: а под кат лежать полный расшифровка интервью с весь ссылка барух jbaruch садогурский: весь привет я звать бáрух я developer advocate в компания jfrog ведущий подкаста «разбор полётов» спикер на конференция вроде joker jpoint ну и всякая лабуд тип javaone devoxx и прочее и сегодня в солнечный маунтин-вить мы сидеть с известный в определённый круг егор бугаенко встретиться поговорить за жизнь егор yegor256 бугаенко: за жизнь? а я думать про ооп java… барух: наш жизнь — это и есть ооп java для начало рассказать о себя для тот кто не слышать егор: java-программист архитектор программировать начать год 20 назад ещё в школа — вначале это быть pascal потом ассемблер потом c потом c++ потом java последний два с половина год вести блог благодаря который появиться какой-то известность писать книжка сейчас писать два тот пытаться немного поправить объектно-ориентированный подход который использоваться в java где-то получаться где-то маленький но пытаться этот идея доносить в масса благодаря что этот массы… барух: бурлят! егор: бурлить и реагировать по-разному да кто-то это нравиться кто-то нет но эффект это производить до кто-то какой-то мысль доходить кто-то против и я не мочь сказать что сам уверенный в весь свой мысль на текущий момент но процесс идти да чем я зарабатывать на жизнь: у я небольшой распределить команда в пало-альто порядок 50 человек сейчас так сказать работать а суммарно человек 100 мы писать софт на заказ на java заказчик у мы здесь в силиконовый долина я управлять этот процесс с несколько проджект-менеджер программист по разный страна отовсюду вот это зарабатывать ну и книжка немножко деньга давать барух: у я к ты масса вопрос во-первых задать острый вопрос: откуда ты такой взялся? ты появиться на поверхность русскоязычный java-комьюнить год назад вихрь пройтись по конференция на постсоветский пространство и я так понимать что завязать что это быть бэрримор? егор: не завязать у я ещё 7 конференция впереди — я приглашать я не отказываться но теперь не так активно я выступить за последний полгода на 25 конференция немножко многовато барух: так вот как так получиться зачем это ты надо? это достаточно тяжёлый работа я по свой опыт знать программист архитектор cto внезапно решает: «а не провести ли я полгода разъезжать по конференциям» егор: хороший вопрос у я нет на он ответ но в какой-то момент я понять что хотеться расширить аудитория блог я на это подбить барух: зачем ты этот аудитория? на блог много не заработать на книжка много не заработать я не видеть в это коммерческий интерес мочь быть ты такой образ хайрить людей? егор: ты понимать я уже не контролировать этот процесс я стать заложник процесс который сам создать я завести блог появиться комьюнить человек давать свой фидбэк и начинать я вытаскивать чтобы я с они поговорить это двунаправить процесс с один сторона я хотеть выступить на несколько ключевой конференциях: jpoint в москва в киев jeeconf в белоруссия тот же jet а другой место появиться сам потому что человек я стать видеть и говорить «давать и сюда тоже» барух: у я есть интересный аллегория она весьма непростой но попробовать то что ты делать у я вызывать религиозный коннотация у ты «пророчество» как процесс: ты ходить по мир рассказывать какой-то совершенно «еретические» вещий человек ты любить ненавидеть ты это уже не контролировать это совершенно библейский история и они обычно плохо кончать этот пророки! но у я по повод твой концепция объектно-ориентированный программирование очень много вопрос сейчас мы попробовать они как-то последовательно выстроить основной вопрос такой: ты пытаться придать термин «объектно-ориентировать программирование» какой-то значение который не только сейчас у он нет как ты утверждать но и который на мой взгляд никогда не быть есть то что мы называть объектно-ориентированный программирование это как я кажется отличаться от тот что ты называть объектно-ориентированный программирование и возникать вопрос «зачем?» есть тот путь который ты считать правильный и у он мочь быть плюс и минус как и у люба парадигма — функциональный объектно-ориентированный и так далее почему ты пытаться всунуть свой путь именно в наш знакомый уютный обжитой ниша объектно-ориентированный программирования? егор: почему не создать какой-то новый парадигма ты спрашиваешь? барух: ну она и есть новый парадигма же у слово есть свой значение ооп — это класс объект посылка месседж объект с определённый параметр для получение обратно какой-то значение это полиморфизм наследование какой-то вещий который мы знать любим и так далее теперь ты приходить и говоришь: «нуть объекто-ориентировать программирование — это не это» зачем? егор: ну скорее не «зачем» а «почему» у я нет ответ на вопрос «зачем?» потому что для это должный быть какой-то цель у я такой чёткий цель нет ни денежный ни какой-то другой это вопрос скорее «почему?» почему я так делать потому что я сильно не нравиться то с чем я работать на протяжение многий лет… я не нравиться ни тот код который я писать ни тот java который я видеть ни библиотека с который я сталкиваться я неприятно с они работать не только я а человек который вокруг я программист я видеть какой код они писать как тяжело этот код потом понимать поддерживать как вообще неприятно программировать я не нравиться ни тот код который я писать ни тот java который я видеть ни библиотека с который я сталкиваться я неприятно с они работать я на конференция задавать вопрос аудитории: «во нравиться то что вы делаете? вы любить этот код вы с утро просыпаться смотреть на этот код и хотеть он писать или вы писать потому что вы нужно это делать?» кто-то говорить «да мы нравится» но я думать многие лукавить я помнить себя когда один три день или три неделя писать программа с нуль и она ты нравиться а последующий три год ты писать её потому что должный барух: ну это весь понятно но это нормальный явление… егор: я думать что ненормальный барух: ну я к тот что это известный явление и решение это тоже неизвестно например взять весь кто сегодня использовать функциональный программирование они говорят «н не нравиться объектно-ориентированный программирование и мы послать в другой парадигма потому что мы быть противно от этот ваш джавы» и они взять и послать в другой парадигма егор: но они и там нагадить если они не понять ооп и просто от он отвернуться сказать что оно плохой в целое весь ооп… как вот недавно в блог я собрать цитата известный человек о объектно-ориентированный программирование они весь говорят гадость начинать с дейкстра заканчивать сегодняшний днём человек говорят что это противный концепция в принцип давать её не использовать потому что она помогать создавать «spaghetti code» барух: ну да они утверждать что индустрия перерослый объектно-ориентированный программирование — так же как она перерослый процедуральный программирование и тут я опять возвращаться к тот же вопрос естественный ответ быть бы: «ок вот новый парадигма вот «ооп 20» а ты говоришь: «нуть то что вы не нравиться на самый дело называться по-другому» и вместо тот чтобы предствавитя свой новый парадигма (что сам по себя непростой путь) ты к это добавлять ещё сопротивление тот что человек не понимать зачем ты пытаться назвать это что-то иной весь мейнстрить неправильный 95% вы делать неправильно егор: ну чтобы нос они ткнуть это такой элемент провокация который необходимый чтобы человек задуматься если я имя предложить «ооп 20» как ты говорить ну почитать несколько человек скажут: «ну хорошо ещё один идея какой-то отложить её подумать у мы есть java она прекрасный она идти вперёд она мейнстрить на она весь писать по она проводиться огромный конференция на она огромный фреймворка весь прекрасно» есть какой-то другой новый парадима? ну хорошо у он половина-фреймворка восемь программист ну вот пусть они там сидеть и копаться когда же я приходить в этот центральный мейнстрить и говорить «ребята весь ваш мейнстрить неправильный 95% вы делать неправильно» народ начинать шевелиться ёрзать на стул и понимать что он не предлагать что-то третье (куда он мочь пойти а мочь проигнорировать) а объяснять что сегодня ты только вредить весь конечно это вызывать большой эмоция у я много мейлов есть я человек пишут: «я понять что десять год подряд делать не то твой такой-то статья открыть я глаз я теперь весь понять я быть делать так» а другой пишет: «да заткнуться ты прекращать это рассказывать мы знать что делать» такой разнополярный реакция говорить о тот что человек это затрагивать что имя это небезразличный а это хорошо а если делать что-то стоящий в сторона это мало кома показаться интересный барух: то есть ты специально выходить на линия огонь для тот чтобы заставить человек задуматься егор: так получиться когда я начинать статья писать у я быть один статья о тот что null reference — это плохо она не очень провокационный потому что многие о это знать и говорят я написать немного более резкий тоном: большинство стать говорить о тот что стараться он избегать а я написать что это в принцип плохо это evil не трогать он потом пойти чуть далёкий и написать про геттер и сеттер то есть я не хотеть никто провоцировать я просто писать исходить из свой опыт потом отследить реакция и понять что многий человек это цеплять за живой и они согласный с это увидеть много фолловер не хейтер а потом подключиться хейтеры но я они игнорировать потому что видеть что кто-то это в касса кто-то с это согласный я пойти немного далёкий но я не специально не быть такой задачи: давать мы сейчас спровоцировать толпа увидеть на что у они быть реакция и начать собирать трафик такой цель не быть я просто написать сначала несколько стать из свой нескольколетний опыт барух: то есть ты опять же возвращаться к религиозный тематика который я не отпускать это какой-то реформаторство то есть ты делать какой-то новое прочтение и как в любой реформаторство есть человек который называть ты еретик и хотеть сжечь на костре… есть наоборот последователь и в общий-то ты это осиный гнездо палка расшевелить егор: причём хейтеры — это в основное человек который мало читать который мало слышать слышать звон — ну ты сам это видеть на «разбор полётов» в 109-метр выпуск когда женя evgenyborisov борис прийти и клеймить я особо не прочитать ничто я весь хотеть послать он книжка я бы очень хотеть чтобы он прочитать весь целиком и собрать весь в куча ты же читать книжка ты понимать это а он прочитать что-то услышал: «а он говорить что вот это плохо и это плохо да он дурак» и большинство негативный реакция именно такой человек узнать что-то по половина-слово и сформировать мнение это не сбивать я потому что есть человек который согласный если бы быть весь несогласный я бы сильно задуматься не зря ли провоцировать толпа а так сделать недавно на gitter-чат там набраться за полтора месяц 120 человек и человек обсуждать часто уже в сторона от я часто бывать идея какой-то один спрашивает: «как бы вы это сделали?» а другой он отвечают: «мы бы сделать это так» и давать ссылка на мой блог это очень прикольный наблюдать когда мысль уже не мой они уже там жить человек это пользоваться это приятно хотя есть в это же чатик хейтеры мы систематически стараться тушить а они поднимать флейм и там часто задавать этот твой вопрос: «зачем ты менять ооп у мы весь хорошо у мы есть java… ну назвать это по-своему и отстать от нас» барух: на мой взгляд в это есть такой проблема: быть реформист и пророк обычно плохо для бизнес потому что деньга любить тишина и у я вопрос такой: как это отражаться например на твой процесс набор на работу? когда клиент приходить и слышать что мы делать что-то сильно иначе то у он возникать вопрос «а не ошибаться ли они» егор: да ты право совершенно это плохо отражаться на бизнес во-первых с приём на работа проблема во-вторых с поиск клиент когда клиент приходить и слышать что мы делать что-то сильно иначе чем другой то возникать вопрос «а не ошибаться ли они» мы вы весь заказать а через полгода быть искать новый команда который весь это выбросить потому что понимать только этот это есть с набор на работа тоже проблема — хотя есть человек который очень хотеть именно к мы пока такой немного но я интересный не быть ещё один компания в большой ряд другой а быть компания который делать что-то иначе и хороший мочь я ошибаться барух: женя борис просить узнать насколько часто бывать что на интервью ты давать претендент тестовый задание показывать кусок код а он переворачивать стол и говорить «что это за хернить я не быть это писать» егор: я слышать тоже как женя борис сказать в какой-то «разбор полётов» что у он в израиль быть знакомый команда где человек делать что-то по-своему и весь остальной компания банить человек из этот команда то есть если ты приходить из тот компания то весь никакой интервью потому что у ты мозг сломать и ты писать по-другому я понимать у мы тоже есть такой штука мы когда принимать java-программист на работа мы часто давать кусок код на java который на мой взгляд написать с больший количество ошибка и просить показать ошибка что бы вы исправили? и многий этот кусок код кажется правильный а там сеттер геттер null… весь про что я выступать там представить и тот кто не обращать на это внимание просто рефакторит и считать что весь нормальный мы такой человек отклонять но есть человек они не так много но и немало который находить и говорят: «да вот тут у вы этот сеттер геттер — это что за фигня это ерунда… надо переписать по-другому» вот такой человек мы сразу: оп заходить и они находиться в месяц одного-двуха неплохой ребята иметь барух: это хороший темп егор: мы не спешить мы же не строить сейчас команда из тысяча человек у мы на данный момент такой задача нет но ситуация я кажется на рынок меняться я слышать не так много человек но кто-то слышать я думать что изменение пойти не через мой компания не через коммерческий а человек на место у себя начать менять я написать человек несколько неделя назад что прочитать мой книжка она он очень понравиться потом он показать из нея кусок свой коллега и теперь с он не дружить но он же пойти и показать значит какой-то эффект пойти не я это рассказать а он пойти это прикольный барух: антропологический интерес в это весь я понимать раз уж всплывать книжка давать немножко поговорить про книжка это начаться как блог который ты решить подбить вместе в какой-то подборку… егор: не сначала я писать в блог чуть большой год а потом с я связаться издательство manning и они предложить написать книжку: ты написать мы опубликовать сначала я сказать «нет» потому что быть занятый потом через полгода решить всё-таки написать сесть прошлое летом и за два месяц её написать это быть несложно потому что материал из блог сейчас я писать два тот и это тяжелее: про некоторый тема никогда ранний не писать и нет реакция человек когда писать один тот знать реакция читатель у я быть куча коммент с manning потом не сложиться и я опубликовать книга сам желание изначально писать книжка у я не быть но когда издательство предложить я задуматься барух: твой концепция развиваться в она есть противоречивый момент это какой-то ментальный work in progress когда картинка ещё не полностью сложиться что требовать какой-то переосмысление тот что быть написать вот этот два тот являться переосмысление первое или ты один откладывать и говорить «что быть то было»? егор: нет я один не трогать я в второе делать ссылка на него: «вота я говорить это а теперь я говорить немножко другое…» барух: вот это я ищу: где быть написать что ты быть неправ? immutability сейчас очень активно обсуждаться в наш чат и не мочь до конец понять что такой immutable object егор: ну у я это бывать я писать что я быть неправый уточнять что-то допустить immutability сейчас очень активно обсуждаться в наш чат и не мочь до конец понять что такой immutable object… и это обсуждение очень живой у я есть в блог четыре штука и в книжка целый глава про … если весь это сложить то там есть вещий который друг друг противоречить но я открытый это нет проблема сказать что я быть неправый барух: сказать «я быть неправ» в теоретический размышление — почётно круто но легко возвращаться к бизнесу: что делать с код который уйти в продакшн и ты сейчас понимать что там ой… егор: вопрос хороший но даже если там быть какой-то ошибка они не такой серьёзный там нет такой фундаментальный ошибка который нужно быть бы переписать целиком есть какой-то момент который чуть-чуть левый чуть-чуть правый но в целое нет и концепция — я не сказать бы «стройная» но складываться один с другой я не просто писать о идея я ещё и код писать также и есть некоторый продукт который три год два год один год можно они просмотреть и увидеть что в продукт который три год два год масса вещий до который я дойти вот недавно не быть сеттер не быть но в некоторый место есть и null pointer и orm использоваться где-то то есть некоторый вещий можно открыть в опенсорс и увидеть что теоретический мысль быть там ещё в зачаток а более свежий продукт более интересный в они уже использоваться весь красота ооп барух: ну вот это интересный раскрытие информация о тот что на самый дело концепция ооп от егор — она work in progress я не уверенный что многие кто с твой концепция познакомиться это понимать в основное из-за книжка потому что обычно когда человек писать книжка поскольку оно на бумага и автор не мочь добавить апдейт «вота тут я написать в коммент что я быть неправ» оно как-то восприниматься закончить immutable так сказать я кажется многие человек не в курс что это весь жить развиваться течь и на самый дело ты готовый не только слушать но и принимать критика и она действительно мочь как-то изменять концепция класс — это вообще ошибка не должный быть класс егор: привести пример ну вот например в книжка у я написать что класс — это определённый концепция который нужный и важный я разговораривать с дэвид уэст и он я говорить что класс — это вообще ошибка не должный быть класс я думать я пока не уверенный право он или что он иметь в вид барух: концепция что класс — это ошибка это из javascript объектно-ориентированный программирование через prototype и есть очень серьёзный диспут на очень высокий уровень который уже продолжаться двадцать год о тот нужный класс или нет и есть довод за и против довод за: в объектно-ориентированный программирование класс — это действительно совершенно лишний сущность она не добавлять ничто ты создавать объект как он считать нужно создать и потом создавать ещё сколько-то такой же но тут с другой сторона есть масса проблема тип immutability: объект мочь измениться что происходить с тот кто создать до этого? должный ли они измениться должный соответствовать новый или старому? и почему вроде одинаковый объект создать с разница в несколько строка код вести себя по разному? потому что в какой-то друг место измениться prototype ну приехать классно теперь вот этот концепция blueprint как класс из который ты клепать объект этот вопрос решать потому что класс — это что-то неизменяемый а объект от он потом отпочковаться и жить свой жизнь а с прототип это не так понятно поэтому тут безусловно есть о чем подумать егор: есть да и что если я поменять свой мнение? барух: ну если ты ещё и от класс отказаться то это вообще быть армагеддон егор: я пока не отказываться от они но дэвид сказать мне: «кто это вообще придумать зачем они нужны?» барух: а вот теперь сказать я давать взять такой гипотетический ситуация что ты действительно решить отказаться от класс и наследование ты — человек который мёртвый хватка вцепиться в java (надо понять почему сейчас мы о это тоже поговорим) но гнуть java под свой ооп можно только до определённый степень егор: да барух: что ты быть делать если ты решить что класс — враждебный ооп структура? егор: я надеяться что я так не решить хотя… понимать у я есть некоторый статья где сказать «как плохо делать вот это» но не предложить никакой альтернатива java я так они и заканчиваю: если java улучшиться и это быть какой-то новый язык тогда мы смочь делать то-то и то-то я предлагать управление памятью: говорить что диск и память должный быть что-то один мы же давать программист в java управлять файл на диск — открыть закрыть почему то же самый нельзя делать с памятью? например я предлагать управление памятью: говорить что диск и память должный быть что-то один мы же давать программист в java управлять файл на диск — открыть закрыть почему то же самый нельзя делать с памятью? вот такой концептуальный вопрос java это не давать а я кажется что правильный язык должный давать возможность управлять память как в c/c++ но в какой-то удобный вид но java я не поменять барух: это подводить я к следующий вопросу: почему ты мёртвый хватка вцепиться в java? ты уже прийти к вывод что истинный ооп-язык не существовать у мы есть платформа jvm позволять относительно малый кровь написать люба синтаксис язык в который быть весь карточный игра и весь девушка лёгкое поведение истинный ооп который ты только захотеть ты не приходить в голова такое? егор: это большой работа и пока у я нет большой количество фолловер коммьюнить она ни к что не привести должный быть большой группа человек иначе это быть мёртвый язык есть какой-то человек который быть бы не против помочь но это большой работа я к она пока не готовый у я есть очень старый статья она год четыре где я просуммировать весь фич который хотеть бы иметь в правильный язык так вот я кажется что он должный совмещать язык и платформа разработка привести пример почему из код мы не мочь получить доступ к git-истории? я мочь получить в комментарий то какой у я хэштег в это файл ну и весь барух: я наверное ты ответить что это отличный библиотека но не обязательно функция язык существовать подход что в принцип язык должный быть минимализировать а весь остальной подключаться с помощь необходимый библиотека и ты есть дело до история твой коммит в git’ а я нет например ты нужный этот фич — ты подключать библиотека и она у ты есть егор: а её невозможно сделать как библиотека она должный быть в язык барух: вот это интересный вопрос почему? потому что этот библиотека быть выглядеть кривой как aop в java приклеить сбоку как aspectj егор: потому что этот библиотека быть выглядеть кривой как aop в java приклеить сбоку как aspectj прикольный идея классный но нет её поддержка в язык есть аннотация который появиться поздний в четыре java вообще не быть никакой поддержка aop и весь это быть налепить через неродной технология поскольку они неродной весь неудобно некрасиво java или люба язык должный давать aop by definition он должный быть by default встроить в язык и так же доступ к git это история наш — кто коммитит сколько коммитит — это уже часть язык барух: но сегодня это git а завтра — mercurial егор: это проблема да барух: и этот проблема решаться библиотека сегодня подключить библиотека для тот завтра для другой егор: я согласный возможно нужный какой-то комбинация «язык + библиотека» нужный возможность использовать язык получить доступ барух: с тем что для язык мочь быть полезно бóльшея количество spi я возможно согласиться егор: вот штука 40 такой фич который должный появиться допустить continuous integration она совершенно никак не приклеить к язык или build automation у мы есть весь этот мавена и грейдлый который к java никакой отношение нативный не иметь сам код на java не знать что он быть билдить я внутри код не мочь получить доступ к этот информация или допустить юнит-тест они существовать на java как просто класс но какой это классы? какой это объекты? у я есть объект book что такой объект booktest? это странно и этот метод — это не метод это процедура в чистый вид микроскрипт оно должный быть сделать как-то иначе сделать так потому что тест сделать после java нужный вы юнит-тест — ну вот так лепить это не нативный не клеиться один к другой это пользоваться но должный быть более удобный средство внутри язык я думать что мы к это идти такой plain язык тип c где просто мочь скомпилировать бинарник — это двадцатилетний давность а сейчас нужно что-то новое барух: это java двадцатилетний давность а c уже сорокапятилетний егор: тем более должный быть что-то новое я думать появиться мочь быть я что-то создать не знать это требовать время и главный должный быть коммьюнить создавать под себя получить чисто мой решение вот ты говорить «не git а что-то другое» а я такой и в голова не прийти для я git стандарт фе-факто ты сказать «у мы целый команда на mercurial или subversion» а у я уже не лепиться целый кусок рынок мой решение не быть поддерживать тут должный быть гетерогенный коммьюнить где разный человек барух: сказать а что ты думать о новый языках? два пример — kotlin и мочь быть ceylon если ты на он смотреть егор: ceylon мало смотреть kotlin — быть на презентация на конференция я тут не мочь быть эксперт но к сожаление я кажется что общий направление в индустрия не в сторона чистый ооп а наоборот в сторона он коммодизация вы нужный геттер и сеттер — так вот они by definition в котлин вы не нужно они писать они там есть! язык придумать и развиваться как design pattern — человек накодиля а потом другой приходить и говорить «этый назвать синглтон а это вот так» а должный быть с обратный сторона должный человек приходить и говорить «давать использовать такой design pattern такой решение» и потом весь практика за они должный идти а мы идти от практика к теория java ee практически покойный по сравнение с технология который рождаться из best practices по сравнение с spring барух: ты предлагать башня из слоновый костя у мы в java коммьюнить такой есть и она на наш глаз рассыпаться я говорить про java ee практически покойный по сравнение с технология который рождаться из best practices по сравнение с spring смотри: java ee развиваться как раз так как ты считать правильный сидеть умный пацан который думать какой best practices должный быть назвать они официальный стандарт более тот этот стандарт продвигаться самый сильный на рынок java-игрок — сам sun а потом oracle у ты есть стандарт from the source что мочь быть хороший и вот егор: я согласный значит плохой теоретик инженер и они должный работать в связка теоретик должный смотреть на практик но потом не описывать увидеть как kotlin не хотеть сказать конкретно про kotlin но выглядеть так: посмотреть на то что человек делать и увидеть что весь делать геттер и сеттер давать человек упростить жизнь я предлагать наоборот: давать человек усложнить жизнь там где они делать что-то неправильно чтобы они перестать делать геттер и сеттер а большинство язык программирование создаваться в битва за популярность они понимать что если дать человек не 4 инструмент а 14 упрощать то что и так делать то они стать использовать с больший интерес у kotlin и имя подобный направление по-моему неправильный практика должный идти с теория и теория должный корректировать практика как ruby язык вроде создаваться правильно но там такой огромный количество статика такой огромный количество процедура что весь язык… язык хороший но с библиотека выглядеть как какой-то каша имя очень тяжело пользоваться по крайний мера я я писать на ruby но это какой-то кошмар java хороший у kotlin и имя подобный направление по-моему неправильный практика должный идти с теория и теория должный корректировать практика барух: то есть ты считать что за язык должный стоять какой-то визионер егор: конечно должный говорить «ребята вы идти немножко не туда теперь пойти туда» а не «всё идти туда побежать вперёд и встать с флагом» к что это приведёт? это временной язык они умереть через несколько год барух: давать я попытаться быть адвокат дьявол и сказать что цель индустрия программирование в который мы с ты находиться — не писать идеальный код цель — это приносить деньга благодаря тот чтобы выкатывать продукт на рынок ранний и эффективный они поддерживать соответственно если ты я спросить что хороший — взять сто мой программист и переучить они на какой-то визионерский новый паттерн с идеально чистый помысел или взять решение уже зарекомендовать себя на рынок с известный скорость разработка с известный слабый местами и усилить они то два оказаться эффективный чем искать новый дорожка и в конец возможно упереться в стенка егор: они не пойти по новый дорожка даже если ты имя предложить безусловно то что ты говорить иметь смысл никто не пойти по новый потому что никто платить за это не быть барух: почему java унаследовать столько болезнь c? потому что должный быть быть похоже чтобы программист мочь это взять и начать фигачить код егор: именно но я не пытаться изменить ситуация с сегодняшний день чтобы мы с завтра стать писать иначе я пытаться менять на шаг вперёд через год два если сейчас мы начать в голов программист вставлять идея о тот что геттер и сеттер — плохой идея то через три-четыре год когда этот человек который сейчас учиться начать создавать свой фреймворка и улучшать что-то учесть этот мысль когда я читать твой книжка это геометрия лобачевский у я начинать пересекаться параллельный линия барух: вот тут у я есть для ты интересный рефлексия вот то что ты пытаться сделать и этот твой блог-пост каждый поодиночке преследовать этот цель ты объяснить почему null — это плохо что должный быть n параметр в метод почему в конструктор нельзя писать бизнес-логика каждый из этот ход наверное немножко улучшать сегодняшний java-программист а потом я брать твой книжка и как я написать в ревить я видеть совершенно другой новый концепция по сравнение с сегодняшний джава по совокупность всего вместе взять когда я читать один пост мочь немножко улучшить свой код оставить весь остальной так же когда я читать твой книжка это геометрия лобачевский у я начинать пересекаться параллельный линия это невозможно сочетать с тем что я делать сейчас или делать так или по-другому и твой код — он тоже совершенно другой он не постепенный изменение существующий когда я смотреть на твой код и сравнивать с мой решающий тот же задача это не просто «у ты нет null а у я есть» твой код вообще ничто не похожий на мой кроме скобочка и точка с запятая и тут у я получаться некоторый диссонанс с твой идея инкрементальный изменение егор: понимать о что ты говорить но я не добиться результат мягкий действие в блог я в рамка один статья вбрасывать человек читать немножко меняться книжка делать броский далеко вперёд она говорить «вы здесь а правильно — вот там через 20 километр как вы туда добраться я не знаю» как в анекдоте: «моё дело — стратегия а с тактика вы сам решайте» а блог давать какой-то шаг — тут немножко так тут так книжка забрасывать далеко вперёд и писаться с такой задача не на один год — как вброса в будущее ну и она должный быть резка тяжело человек сдвинуть масса быть стать про null и про геттер-сеттер ты мочь погуглить не один я это писать почему мой вызывать такой флейм у я про геттер-сеттер триста коммент за полгода а у уважаемый аллен холуб за десять год пара комментов? потому что он говорить мягкий он говорить «стараться держаться от они далёкий не использовать их» а я говорить «ести ты использовать они то ты дурак» естественно это вызывать реакция и побуждать к изменение барух: ты сейчас ставить два противоречивый цель с один сторона ты говорить о инкрементальный изменение человек а с другой про броский на 20 километров… вот смотреть — мой личный фидбэк — я прочитать насладиться мысленный эксперимент и забыть потому что так писать сейчас я точно не быть я очень понравиться быть очень интересно я размять мозги но что я прийти на работа и начать писать так не возникнуть мысль ни раз — в отличие от тот как я прочитать твой пост про null’ и подумать «надо я вот это постараться маленький теперь делать» потому что я работать в команда мой код должный читать и если я сейчас закоммич в git код «yegor style» то после code review я нечего быть кормить семь а если я убрать null’ я только похвалить и тут у ты насколько я видеть есть конфликт этот два цель — что-то реальный что можно сделать завтра и концепция из который нельзя ничто сделать завтра если только не заниматься опенсорс себя в удовольствие егор: это твой позиция а вот например антон antonarhipov архипов написать в ревить что задуматься над тем как он собственный код исправить барух: ха ну ты привести пример «код антон архипова»! антон на данный момент — ведущий продакт-менеджер в zeroturnaround и он не писать код в продукт он не штатный программист он писать много код в опенсорс он делать кодревить но это не тот человек который прийти надеть наушник хряпнуть кофе и до вечер у он восемь часы портянка код выходить который потом нужно тестировать интегрейтить ревьюить поддерживать… егор: ты вроде тоже не такой барух: я тоже не такой но я ставить себя на место программист в команда и я понимать что нет я это никогда это не сделать то что я прочитать в книжка это не просто прикольный это супер-круто причём как по я самый крутой — это настолько непохожий на весь что мы делать и тем не менее иметь смысл но я почитать я закрыть и я это конечно обогатить но ничто такой что завтра я мочь пойти и написать там нет потому что книжка намекать что это один концепция что это весь должный работать вместе в отличие от разрозненный блог-пост в это есть прелесть потому что ты построить общий концепция и в это есть недостаток потому что я не чувствовать себя вправе взять один кусок и проигнорировать остальной я такой образ нарушать концепция это неправильно! в блог у ты весь это отдельно я захотеть — согласиться с null’ами захотеть — не согласиться с сеттер книжка — это концепция с концепция я или соглашаться целиком или нет егор: согласный есть такой проблема но в блог весь разрозненный и быть человек который говорить прямо противоположный вещи: ты вот мы рассказывать про здесь какой-то кусок здесь какой-то а оно весь куда-то свестись у ты воедино? что ты вообще думать про ооп как должный вообще выглядеть объект ты мочь хоть раз написать целый код? то есть человек искать какой-то целостность поэтому книжка суммировать барух: в целостность есть безусловный плюс — из книжка мы понимать что такой «ооп от егора» но возвращаться к твой цель изменить разработчик one step at a time — оно не там и мочь быть нужно и то и другой и кажется в процесс этот беседа у я появиться некоторый понимание что для установление твой credibility нужно чтобы с один сторона человек узнать что у человек есть концепция книжка в конце-конец написать не проходимец а с другой сторона вот практический шаг который можно предпринять сейчас если конкретно этот шаг вы подходить и нравятся… вот ты совет: брать этот книжка который концепция и в конец каждый параграф у ты быть что-то типа: «ребята я понимать что у вы сейчас взорваться мозг и я понимать что вы не смочь это использовать завтра а вот это вот то что быть написать далёкий — вот это смочь применить в код без опасность быть убитый стул на код ревью» не просто ссылка на блог а сформулированый practical advice на основа прочитать глава и тогда получаться некоторый комбинация и целостный картина и какой-то маленькая шаг который можно предпринять сегодня егор: это хороший мысль мочь быть действительно так сделать барух: и вот тогда это наверное сводить два противоположный концепция егор: я согласный я попробовать это сделать мочь быть не прямо в книжка но мысль хороший у я быть много коммент к книжка человек говорят «мало практический пример про то как мы жить» ты вот взять и показать мы два класс это интересно но у мы класс на два тысяча строка как шестнадцать строчка твой класс перенести на наш огромный портянка код есть такой concern барух: я быть бы интересно видеть не только два тот но и два revision первое какой быть сделать вывод из первое том как это быть представить вот этот практический совет — это то что я очень не хватать в книжке: для я она быть абстрактный конь в вакуум и абсолютно мысленный эксперимент и увидеть как revision этот книжка изменить именно это быть бы интересно егор: быть работать барух: что ещё мы не обсудили? какой план на будущее? егор: я быть на java day в киев там быть два мой доклад не касаться мой книжка не касаться ооп и discussion board как раз про ооп с вышеупомянутый женя борисов я думать этот дискуссия многие ждать на jpoint’ получиться что-то спонтанный но быть реакция достаточно агрессивный и я быть недостаточно подготовить барух: вот да это правильно доклад по «твоему ооп» и по книжка должный быть дискуссионный круглый стол я очень рад что в киев как раз такой формат выбрать егор: так в любой доклад они начинать с я дискутировать на четыре минута доклада! барух: вооот а тут у ты как раз и быть «пять слайд а теперь давать рубиться» и весь быть культурно модератор микрофон носить а не зоопарк человек не понимать фундаментальный вещий а без это сложно что-то строить егор: я ещё сложно презентовать на конференция потому что когда читать весь книжка то весь складно а когда начинать кусок какой-то выдавать то у я не всегда хорошо получаться перед тем как научить что-то нужно научить что-то ещё я пытаться рассказать про orm но для это нужно рассказать вот это и вот это а время нет человек не понимать фундаментальный вещий а без это сложно что-то строить поэтому я не точно знать аудитория насколько они готовый неплохой у я доклад быть единственный который я быть довольный — это быть на java day в минск где я рассказывать про ооп в целое и приводить пример в он быть весь гладко и вопрос быть в тема но это быть последний мой доклад тот турне когда говорить про практический вещий про orm это беда уже барух: это да потому что под это у ты нет время подвести теоретический база а теоретический база в твой случай гораздо интересный чем конкретно твой мнение о тот или иной фреймворка ты нужно давать теоретический доклад с пример что ещё у ты сейчас? егор: ещё у я быть выступление на конференция oredev в швеция посмотреть что европа сказать у я ещё не быть такой опыт я попытаться подготовиться это быть тот же тема что и на jpoint’ но я попытаться ёе сделать в формат дискуссия или короче но ты знаешь европейский публика более пассивный чем наш барух: северный европа — тем более в швеция у ты быть весь очень спокойно егор: у мы прямо шквал вопрос так и должный быть да? барух: конечно егор: для я это быть открытие ну и писать два тот не знать когда он закончить но до новое год он точно выйти там быть про orm много там быть про mvc — точнее против они там быть про аннотация про монада про именование переменный и ещё про что-то по глава писать сейчас orm заканчивать барух: спасибо огромный увидеться 
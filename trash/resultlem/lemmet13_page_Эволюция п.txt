эволюция понимание ооп почти весь программист считать что знать ооп я тоже так считать оглядеться немного я понять что эволюция мой понимание ооп быть немалый начинаться весь с простой что есть класс у они есть метод и если один класс представлять какой-то понятие реальный мир то вот оно — ооп фактически это не статья а просто мысль представление тот как меняться мой понимание ооп и отношение к он кстати я не уверенный что через пара месяц оно вновь не претерпеть некоторый изменение ооп прежде всего инструмент для я жизнь в ооп начинаться с предельно простой фраза который актуальный и сейчас весь что существительное — это наш объект весь глагол — это действие а прилагательное — это характеристика забавно что этот фраза я услышать лишь на третье курс университет получаться что основа ооп проходить на урок русский язык в школа увы лишь сейчас я понимать как недооценивать этот урок главное преимущество ооп на мой взгляд являться тот факт что мы он использовать как в программирование так и в обычный речь мы просто мочь продолжать жить свой жизнь обсуждать различный понятие спорить о тот кто и что должный делать это происходить каждый день по несколько раз просто попробовать перенести весь такой обсуждение в рабочий область в область программирование мы обсуждать контракт наш фирма с заказчик — так вот он объект контракт мы обсуждать возможность публикация контракт на наш сайт — и вот оно поведение что контракт можно опубликовать такой простой использование язык и слово в предложение при определение модель позволять мы не коверкать язык при общение с заказчик если он я говорить что по контракт должный быть возможность выплатить какой-нибудь премиальный человек который работать над он заключение я с лёгкость это сделать с помощь простой метод в класс контракт в последствие для я этот метод и быть сигнал тот что по контракт платяться деньга и я уже не забыть о это я точно знать где находиться этот функционал если провести некий аналогия то для я это сродни кросс-платформенный среда разработка например тот же net не важный на какой язык я писать — c# vb или какой-то другой я знать что мой код скомпилиться в промежуточный так вот представить что я как программист использовать c# а мой заказчик говорить свой требование на vb в такой ситуация ооп служить тем самый преобразователь который помогать сойтись я и заказчик быть на один волна любить они фраза — to be on the same page и вот тут открываться ключевой особенность который быть не заметный ранний ооп — это инструмент мой модель который я реализовать у себя в код — это инструмент она не обязательно быть сохраняться полностью если мол я создать объект поиграть с он изменять он внутренний состояние получить от он какой-то выхлоп и теперь мочь спокойно он выкинуть в мусорка она как отвёртка который помогать в работа как табличка экселя который я открывать производить рассчёты и закрывать без сохранение это именно инструмент в работа с дать а не целостный сохранять модель очень часто в команда разработчик разделить человек заниматься база дать и человек работать над непосредственно код модель и пользовательский интерфейс я вовсе не ратовать за то что этот команда надо разделять я наоборот приветствовать совместный работа так вот если не привязываться к данные то рефакторинг свой модель выглядеть как усовершенствование наш инструмент для работа с это набор дать это весь равно что выпустить новый улучшить дрель или новое сверло чтобы сверлить более толстой стена действие важный тот кто он совершить существовать миф что программист ооп сначала писать класс скорее всего это заблуждение пошло от тот что в объектно-ориентированный язык весь операция и функция выполняться в какой-то объект а значит чтобы описать любой поведение необходимый создать класс весь вроде так но понимание тот что значит написать класс у весь разный начинать с создание пустой класс заканчивать описание он состояние и поведение в большинство случай рабочий цепочка выглядеть так — мы понимать что мы нужно какой-то поведение система и мы описывать интерфейс объявлять контракт на это поведение затем мы оценивать в какой момент время он необходимый выполнить и выбирать идеальный исполнитель из существующий объект либо создавать новый вы никогда не быть писать класс а потом думать чем бы он заняться то есть цепочка всегда начинаться от поведение механически же мы часто создавать новый класс и лишь потом объявлять в немой метод получаться что этот миф прийти к мы из механический понимание вещий в ооп порой мы думать весьма быстро и только лишь осознать какой поведение система нужно уже принимать решение о тот что за объект быть он выполнять отсюда тоже создаваться впечатление что мы плясать от объект но нет ведь мысль всегда начинаться с поведение плюс к тот заказчик мы в это помогать он всегда нужно чтобы система что-то делать а не просто иметь какой-то там понятие тип контракт или заказ задача рассчёт мысль объектник не удержать себя от сравнение процедурный и объектно-ориентированный подход я задаться простой вопрос — где бы я мочь использовать процедурный подход вместо объектный если честно то я не знать такой область в который ооп явно проигрывать функциональный подход по тем или иной параметр один вещь который вертеться на язык весь же есть — это какой-нибудь калькуляция сложный рассчёты алгоритм давать взять пример когда мы необходимый выполнить рассчёт величина по какой-то сложный правило я не знать как бы действовать человек который проповедовать процедурный стиль но мысль объектник я понять мочь пункт один я бы разбить этот калькуляция на смысловой этап например подсчёт вот это коэффициент потом это и потом финальный каждый этап калькуляция — это объект который быть участвовать в весь процесс для общение между шаг чтобы дать имя возможность обмениваться дать создать ещё один вспомогательный объект который быть хранить в себя весь промежуточный рассчёты затем объеденить этот объект в единый цепочка описать один единственный метод который быть возвращать необходимый значение и весь такой код быть удобно тестировать он комфортно читать в немой не трудно разбираться но есть один но нужно иметь небольшой сдвиг в свой понимание что объект — это не обязательно какой-то существительное из реальный мир это мочь быть ещё и действие а вот это уже становиться сложный и явно не в польза ооп определить грань где в качество объект использоваться объект реальный мир или какой-то понятие а где объект мочь быть действие весьма непросто да и нужно приложить некий усилие чтобы понять как быть выглядить метод у такой объект получаться поведение у какой-то действие а это уже за грань русский язык из такой мой понимание вещий я делать вывод что ооп действительно не самый хороший выбор для дать задача но лишь потому что он мочь быть не всегда простой и прозрачный в понимание 
весь программист думать что c++ поддерживать ооп кроме автор ооп в последний время заметить статья на тема «ооп крутой vs процедурный программирование плохо и «ооп плохо vs процедурный программирование круто и «ооп и процедурный плохо vs будущее за xyz принцип где xyz какой-то модно новое понятие самый смешной в этот статья то что многие под ооп понимать некий принцип когда-то заложить в c++ и редко кто реально понимать что такой ооп вдруг я показаться что 99% программист вообще плохо понимать что такой ооп но мочь быть я ошибаться давать посмотрим… цель статья не холивар а попытка осознать иной точка зрение на понятие ооп точка зрение не мой а автор самый страшный то что мой точка зрение где то близкий к авторский но далёкий от тот что понимать под это термин большинство программист давать разобрать формулировка ооп ооп = объектно-ориентированный программирование другой слово программирование который основать на создание некий объект и кто-то решить что речь идти о класс но кто это решить когда и почему с студенческий скамья можно поднять история и выяснить что один из один кто реализовать принцип ооп и запустить они в масса являться c++ весь что идти далее наследовать именно это понятие вс` бы ничто но есть один проблема весь думать что c++ поддерживать и ассоциироваться с ооп кроме автор понятие ооп вот он цитата я придумать термин «объектно-ориентировать и я уверять вы что не иметь в вид c++ — ален кей ещё много интересный он цитата по ссылка 1 интересный статья на хабра тут 2 подборка из 15 цитата часть из который весьма интересный тут часть из этот цитата быть использовать далее для переворачивание сознание если c++ это не тот ооп который иметь ввиду автор то какой тот автор утверждать что речь идти о чем то похожий на smalltalk и рекомендовать весь изучать lisp но много ли из читатель знакомый с этот язык если есть тот кто глубоко знак с этот язык и опыт решение реальный прикладной задача то быть очень рад за комментарий к этот статья но мой внимание зацепиться ещё за ряд он цитата по тема 1 «я жалеть что придумать термин «объект много год назад потому что он заставлять человек концентрироваться на мелкий идея по-настоящему большой идея — это сообщение 2 «ключ к тот чтобы делать большой и расширяться система заключаться в тот чтобы придумывать как модуль быть общаться друг с друг а не заботиться о они внутренний свойство и поведение 3 «я думать о объект как о живой клетка или как о отдельный компьютер в сеть который обмениваться сообщение 4 «одно из ключевой идея — делать система который бы продолжать работать в время тестирование и в особенность в время внесение изменение даже большой изменение должный быть инкрементарный и тратить не большой секунда перед вступление в сила 5 ооп для я это сообщение локальный удержание и защита скрытие состояние и поздний связывание всего это можно сделать в smalltalk и в lisp и ещё серия для дожатие мысль я жаль что давный давно я использовать термин «объект для этот тема потому что из-за это многие человек фокусироваться на меньший из идея большой идея который не хватать современный статически-типизировать оо-язык большой идея это «сообщение ключ к создание хороший масштабировать система это проработка механизм общение модуль а не проработка они внутренний свойство и поведение в этот цитата я бы отметить следующий особенность 1 речь не идти о язык программирование а о подход 2 фокус не на объект да и объект это не то что общепринятый 3 объект — это модуль или компонента система мочь быть даже отдельный компьютер и сервер 4 быть не в сам объект а в способность этот клетка общаться между друг друг посредством сообщение и вот мы плотно подойти к тот чтобы перевернуть быть понятие ооп ооп — это архитектура приложение речь не о язык программирование а о способность система создавать объект и обеспечивать эффективный обмен сообщение между они и взаимодействие также стоить отметить мысль о тот что такой язык в принцип нет есть лишь платформа который отчасти смочь приблизиться к этот идеология я показаться что я понять быть этот идея когда искать платформа достаточно гибкий чтобы управлять больший сложный система требование к который меняться ежедневно и я это удаться у этот платформа есть ряд соответствие понятие ооп в версия автор 1 у этот система компонента обмениваться сообщение друг с друг и такой образ позволять менять поведение друг друг один компонент мочь изменить поведение другой компонент соответствие цитата №1 2 у этот платформа весь быть в тот что модуль мочь взаимодействовать друг с друг при это внутри сам модуль мочь быть написать ужасно кривая рука глупый джуниор соответствие цитата №2 и у этот платформа количество модуль самый большой в мир относительно другой платформа вероятно как раз по тот причина что в этот платформа этот принцип сделать хороший чем где-либо 3 компонент в этот система действительно большой походить на клетка который мочь добавляться или удаляться за доля секунда они десятка тысяча из они ты строить система при это каждый такой клетка мочь обмениваться сообщение с другой 4 при это каждый компонент достаточно автономный и часто мочь быть отключить и отремонтировать без остановка весь система соответствие цитата №4 он мочь обновляться за несколько секунда на лёт внутри система мочь быть более 100 такой компонент каждый из который обновляться отдельный команда разработчик 5 система изначально содержимый в себя канал сообщение и они связка мочь быть поздний в любой время поздний когда понадобиться сегодня я не знать как поздно и когда в какой место и какой компонент я понадобиться изменить в будущее но я понимать что с высокий вероятность смочь это сделать как только я понять какой состояние и какой поведение какой компонент я нужно быть изменить я смочь это сделать либо очень просто либо относительно просто я показаться что именно этот платформа подойти близкий всего к понятие ооп вероятно по этот причина этот платформа захватить рынок стать №1 в мир по ряд показатель более 25% сайт в мир и в рф работать на этот платформа это абсолютный мировой рекорд думать многие уже догадаться о чем речь  это wordpress думать что в мир есть и другой платформа который суметь реализовать принцип ооп близко к тот как это видеть автор концепция но судить по доле рынок у wp с это явно наметиться успех php — это лишь язык программирование сам по себя он не давать ооп ооп образоваться только через прослойка который давать необходимый метод для взаимодействие компонент или объект в понятие автор концепция ещё один платформа в который как я показаться есть этот особенность это backbonejs javascript как и php не давать нужный метод для ооп но backbonejs уже давать и позволять создавать объект и обеспечивать эффективный обмен сообщение между они или взять актуальный в последний время система микросервис который общаться посредством restfull api & webhooks каждый такой веб-сервис являться по свой суть объект в понятие ооп как это видеть автор резюме это не попытка навязать свой точка зрение это попытка понять кто и как видеть этот идеология я любить ооп в тот вид как это принять в php использовать класс при это я не против процедурный программирование и считать что это хорошо для многий задача уважать подход с rest api и вебхук но каждый метод я не считать абсолютный истина и ценить когда каждый инструмент применяться по назначение ещё большой я нравиться система хук в wordpress который позволять создавать действительно сложный система с сотня компонент каждый из который мочь быть добавить или удалённый на любой этап развитие система такой образ мы удаваться создавать очень сложный система для управление бизнес-процесс или агрегатор с организация множество процесс и человек очень сложный аналог который сложно найти на рынок и судить по цитата автор концепция ооп то механизм хук и фильтр wordpress сильно близкий к изначальный понятие ооп чем то что принять писать как класс в php и c++ кто что думать на этот счёт кома это понимание ооп близко почему кто считать это бред почему поговорить с я upd 20160811 упс оказываться весь что я тут описать уже общеизвестно и даже есть в википедия — пруф и даже то что ооп разделяться на классно-ориентировать и компонентно-ориентировать программирование другой слово то ооп что обычно иметь ввиду это классно-ориентировать и это то что быть придумать в c++ а то о который речь в статья это компонентно-ориентировать и это то что быть придумать ален кей в статья я ошибиться сказать что 99% программист не знать что такой ооп в комментарий ошибиться тот кто решить что этот идея бред как-то так 
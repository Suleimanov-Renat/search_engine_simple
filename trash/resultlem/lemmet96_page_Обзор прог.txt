обзор программа java-конференция jbreak 2018 абсолютный баланс конференция jbreak 2018 быть единственный java‑конференция в сибирь дата 4 март 2018 место новосибирск экспоцентр станционный ул 104 маленький чем через 2 неделя состояться jbreak 2018 в этот раз я смочь поучаствовать в программный комитет и мочь не просто пересказывать чужое слово а поделиться впечатление это быть очень круто этот jbreak обещать быть чуть ли не самый сбалансированный по сочетание хардкора практика и смузи причём доклад выбрать так чтобы как можно маленький пересекаться с jpoint она быть через месяц например никита коваль быть и на jbreak и на jpoint — но с два совершенно разный тема это важный например для тот кто хотеть побывать на jbreak вживую а на jpoint — в онлайне доклад очень разноплановый если вы хотеться погрузиться в кромешный ада внутренность jvm к мы приехать крис талингера и фолькер симонис — известный специалист в это самый если хотеться узнать про будущее java о это есть доклад замдиректора азула саймон риттер правда там тоже не весь так просто — прийтись погрузиться в куча jep' релизный политика современный тренд развитие платформа и так далее если же хотеться поучаствовать в лёгкое ярок стремительный шоу с использование трендов технология тип apache kafka kafka connect и ksql — для это к мы прилететь витя gamussa гамов сооснователь и лидер любимый многий программист правильный подкаста «разбор полёт по совместительство являться solution architect в компания confluent чтобы не верить я на слово под кат быть осветить основной вопрос и привести полный программа jbreak 2018 с описание доклад и фоточка спикер в самый конец статья быть ссылка на регистрация поехать вопрос организация весь проходить прямо в новосибирск даже если наплевать на стоимость билет на самолёт каждый ли работодатель отпустить на целовать неделя в санкт-петербург на joker давать считать день чтобы туда прилететь и устроиться в гостиница два день конференция день чтобы вернуться назад 4 час полёт + 4 час разница часовой пояс — это сразу минус день риск что ты никуда не отпустить в свет надвигаться дедлайн велик но jbreak проходить в новосибирск и никуда лететь не нужно это быть выходной день многие работодатель считать конференция чепуха и вполне мочь не отпустить в рабочий день но jbreak пройти в воскресение так что к черта весь этот запрет в суббота можно быть немного отдохнуть от работа в воскресение — посетить jbreak и окунуться в он с голова а в понедельник — приступить к задача с свежий мысль и новый инструмент участник конференция конечно же быть предоставить видеозапись весь доклад причём очень быстро если воспринимать конференция как реальный источник знание то безумие быть бы надеяться запомнить такой количество полезный информация в один день к счастие запись у мы быть стоимость билет — значительно маленький чем на jpoint и joker примерно в 3 раз конечно нужно учитывать что jbreak идти только один день а jpoint и joker — два день вопрос содержание на jbreak быть не только простой лайтовыя доклад но и мощный хардкор такой вещий который иметь реальный ценность давать конкурентный преимущество заставлять шевелиться извилина whatever нечто такой что почти никогда не завозить на редкий новосибирский java-митапа хотеть знать как добавить новое интринсик в jvm кушать подать доклад с один из прошлое jbreak на это быть совершенно новое доклад среди спикер — не только наш соотечественник но и зарубежный специалист с мировой имя среди наш соотечественник — сибиряк с который вполне возможно однажды столкнуться на улица например никита липский жить в новосибирск и работать в excelsior — это тот самый чувак который написать свой собственный jvm владимир плизга работать в цфт чтобы не казалось что это тайный масонский новосибирский ложа есть человек и из другой место например алексей зиновьев исторически из омск тагир валеев lany на этот раз не делать доклад но он быть стоять на стенд jetbrains и он тоже жить в новосибирск работать в jetbrains и делать тот самый ide на который ты писать свой код программный коммитета jbreak тоже в многое сибирский с весь спикер можно быть пообщаться в специальный дискуссионный зона грубо говорить после доклад каждый  спикер направляться в специально отвести место где можно продолжительно мучить он сложный вопрос про это я написать чуть ниже с красивый фотография - jbreak — это не уменьшить копия jpoint и joker а самостоятельный конференция с свой собственный доклад программа jdk 9 mission accomplished what next for java jdk 9 включая java platform module system jpms наконец-то дошлый до полноценный релиз этот доклад начаться с быстрый вступление заключаться в перечисление нововведение jdk 9 — тот как это помочь java-разработчик и какой работа мы подкинуть oracle сделать несколько важный заявление касаться будущее jdk вообще и java ee в частность мы взглянуть на предлагать изменение в скорость выпуск релиз схема наименование релиз на бинарник с использование лицензия gpl быть рассказываться о модель lts-релиз и о тот как она сказаться на разработчик и администратор и наконец мы посмотреть на будущее java-платформа в целое существовать множество jep' и проект openjdk такой как valhalla amber metrololis и loom — в доклад также быть объясняться что весь это значит для разработчик саймон риттер саймон работать заместитель генеральный директор в azul systems он начать заниматься информационный технология ещё в 1984 год получить степень бакалавр физика в университет брунель в англия в 1996 год саймон присоединиться к sun microsystems и начать работа над java версия 10 время он тратить как на разработка непосредственно код так и на консультирование после покупка sun он перейти в oracle и заняться управление команда java-евангелист заниматься технология ядро java java для клиентский приложение и java для встроить система сейчас работать в azul он продолжать помогать человек хороший разбираться не только в java как таковой но ещё и в технология и продукт azul саймон дважды быть наградить статус java rockstar на конференция java one и один раз — титул java champion сейчас он представлять azul в исполнительный комитет jcp и на экспертный группа java se jsr 379 и jsr 383 create effective tests or create excuses — testing the java ee way тестирование — это весь ещё тот тема который старательно избегать большинство разработчик несмотря на то что тестирование очень важный для получение действительно хорошо работать софт разработка и поддержка тест занимать огромный количество время и усилие — особенно когда изменение в существующий функциональность заставлять изменяться сценарий тестирование можно быть бы просто выбросить тест но это очень плохой решение отсюда возникать вопрос — как же мы тогда смочь писать энтерпрайзный тест эффективно и продуктивно этот доклад призвать показать что необходимый для тестирование java ee приложение — эффективно прагматично и конечно автоматизированный в доклад рассматриваться такой вопрос как получение быстрый обратный связь достаточный объём покрытие предсказуемый скорость разработка весь время быть потратить на лайвкодинг тесто-кейс который быть покрывать различный спектр функциональность и использовать различный технология мы увидеть как контейнер и фреймворка для оркестрация мочь реально помогать в тестирование сложный и объёмный приложение в частность мы отчётливо увидеть как разрабатывать хорошо поддерживать код тест так чтобы он продолжать оставаться высококачественный и мастерски написать sebastian daschner sebastian daschner — консультант в область java-технология автор книга и стать тренер по различный направление разработка активно заниматься программирование и java ee он являться автор книга «architecting modern java ee applications себастиан участвовать в jcp и заниматься там разработка будущий версия стандарт java ee участвовать в работа экспертный группа jax-rs json-p и config взаимодействовать с различный open source проект за вклад в сообщество и экосистема java он получить титул java champion oracle developer champion и javaone rockstar кроме java себастиан очень любить linux и технология контейнеризация тип docker он проповедовать практика computer science в блог https//blogsebastian-daschnercom в собственный рассылка и на твиттер @daschners когда он не занятый java он путешествовать по мир — не только на самолёт но ещё и на мотоцикл spring boot starter — как и зачем spring — уже не магия спасибо «spring-потрошитель и евгений борисов а вот spring boot довольно часто клеймить магический поделка но многий нравиться особенно новичок в доклад мы осветить следующий зачем вообще в рамка типовой компания использовать spring boot мочь понадобиться собственный стартер как скоро инквизиция приходить за новичок если они бездумно использовать готовый стартер насколько spring boot самостоятельный и что это значит для разработчик доклад рассчитать на практиковать spring а хороший spring boot инженер который уже сталкиваться с различный трудность поддержка увесистый инфраструктура разрабатывать с использование spring максим гореликов разработчик из альф-лаборатория заниматься разработка api для мобильный приложение и немного слой безопасность в основное использовать экосистема spring и netflix но пробовать весь что найти хороший на github экспериментировать с реактивный подход несколько эксперимент успешно дожить до продакшный хотеть понимать не только свой приложение но и весь что вокруг они поэтому работать с весь инфраструктура лог ci/cd оркестрация в общий devops — наш весь кирилл tolkkv толкачев разработчик в альф-лаборатория разрабатывать различный банковский api формировать принцип и набор инструмент для работа с микросервисный архитектура большой поклонник groovy gradle spring и стек технология netflix постоянный резидент подкаста «разбор полёт методология devops знать не понаслышке и иметь почти двухлетний опыт её применение graal how to use the new jvm jit compiler in real life jep 317 experimental java-based jit compiler приближать момент когда graal начать использоваться повсеместно на самый дело graal уже иметься в jdk 9 в соответствие с jep 243 java-level jvm compiler interface graal сам по себя написать на java что добавлять новое свойство и особенность который ранее не быть в hotspot в это доклад мы увидеть как использовать graal вместе с jdk 9 как собирать graal из апстрим и на что стоить смотреть при он использование в бенчмарка или мочь быть даже в продакшний кристиан талингера крис талингера — разработчик работать над различный jvm более 13 год являться эксперт в компилятор в особенность — в jit-компилятор изначально участвовать в проект cacao и gnu classpath но как только sun microsystems отдать jdk в open source сфокусироваться на openjdk с тот пора крис работать над hotspot в sun oracle и сейчас продолжать заниматься это в twitter это кто там такой твитит про #jbreak что мочь быть интересный чем построение система конвейерный обработка дать data pipelines давать разобрать поток твит прямо здесь использовать модный технология — apache kafka kafka connect и ksql мы же весь знать и любим sql правда так вот ksql — это почти как sql только для kafka ksql позволять создавать сложный система обработка потоковый дать без написание java или scala sick код но самый интересный начаться тогда когда в режим реальный время с помощь ksql мы быть обрабатывать лента твит и разобраться кто большой весь твитит на конференция виктор гамов виктор гамов — сооснователь и лидер любимый многий программист правильный подкаста «разбор полёт по совместительство являться solution architect в компания confluent который разрабатывать платформа на база apache kafka помогать клиент в проектирование и разработка распределенный система обработка потоковый дать соавтор книга «enterprise web development издательство o'reilly в свободный от работа время виктор не забывать про качалка и бицуха являться завсегдатай конференция jugru group jpoint joker jbreak и другой международный конференция javaone devoxx oscon qcon писать в twitter как gamussa вести канал про kafka в telegram https//tme/awesomekafkaru clustered event sourcing and cqrs with akka and java декомпозиция монолитный система на микросервис приводить не только к разделение монолитный код но также включать в себя ликвидация монолитный дать поэтому построение система собранный из слабосвязанный микросервис требовать новый стратегия как в отношение написание код так и в дизайн дать один из часто использовать альтернативный стратегия — event sourcing & cqrs command query responsibility segregation в это доклад мы смочь дробный познакомиться с мотивация лежать за построение такой система и с архитектура es & cqrs мы погрузиться в специальный демонстрационный реализация es & cqrs написать целиком на akka и java akka — это тулкит который предоставлять акторный реализация event sourcing & cqrs что по суть означать что такой решение можно запускать на распределить кластер мы познакомиться akka persistence и узнать какой образ при это использоваться другой возможность akka такой как кластерный синглтон и кластерный шардинга hugh mckee hugh mckee работать на должность developer advocate в lightbend он долгий время работать над создание приложение который развиваться слишком медленно неэффективно использовать инфраструктура быть хрупкий и легко ломаться весь это измениться когда он начать делать реактивный асинхронный система с использование актор этот радикально новый подход изменить он жизнь в качество дополнительный бонус делать такой система куда весёлый сейчас он заниматься тем что помогать другой разработчик открывать для себя невероятный возможность который приходить с переход на новый набор принцип responsive resilient elastic message-driven и тп верификация java-байткод когда как а мочь отключить сегодня java-разработчик весь чаща использовать библиотека для порождение java-байткод в рантайм для эффективный реализация различный трюк который сложно или невозможно выразить на язык jav но если использовать язык java компилятор javac гарантировать что на выход получиться корректный java-байткод то спускаться на уровень непосредственно байткод вы нужно часто самостоятельно следить за он корректность иначе вы быть получать jlverifyerror при загрузка породить вы класс потому что jvm строго следить за корректность байткод который она загружать посредством верификатор java-байткод такой образ порождать байткод вы часто недостаточно просто знать семантика байткодный инструкция вы также нужно знать как работать java bytecode-верификатор какой байткод он считать корректный а какой — нет в это доклад мы разобраться какой миссия в jvm нести верификатор байткод когда и как он работать мочь ли повлиять на производительность ваш приложение и почему опасный он отключать никита pjbooms липский один из инициатор и руководитель проект excelsior jet сертифицированный реализация java se разрабатывать компания excelsior работать над проект с 1997 год поучаствовать в исследование и разработка практически весь компонент продукт от ядро до продуктовый свойство в частность являться один из автор поддержка osgi на уровень jvm в excelsior jet технология java runtime slim down модуляризация java se реализовать в excelsior jet с 2007 год оба верификатор java-байткод в excelsior jet и многое другой балансировать клиентский запрос вместе с spring cloud в распределить система с динамический конфигурация существовать проблема корректный обнаружение работать экземпляр сервис и балансировка запрос между они основной вопрос даже же не в тот какой экземпляр мочь быть вызвать в принцип а в тот какой инстанс хороший подходить для вызов в определённый момент время что требовать умный балансировка в условие постоянно меняться конфигурация система в доклад александр разобрать типовой решение проблема в режим live demo на база проект spring cloud который содержимый готовый реализация основный паттерн для разработка распределенный приложение по ход дть быть рассмотреть внутренний реализация клиентский балансировка запрос с пример из официальный библиотека и собственный библиотека автор александр aatarasoff тарасов инженер-программист из одноклассник за плечо александр — более 11 год разработка в основное на java более три год практика внедрение различный род автоматизация иметь несколько open source-проект связанный с spring cloud на github вести собственный блог писать статья на хабрахабра и dzone эксплуатация hadoop tips and tricks речь пойти о проблема и задача с сторона эксплуатация hadoop а также о тот как мы адаптировать hadoop под инфраструктура яндекс доклад быть полезный весь у кто есть hadoop в продакшний системный администратор devops' разработчик игорь андреев системный администратор в компания яндекс последний 4 год занятый развитие и поддержка кластер hadoop side effect injection или добродетельный костыль помнить тот случай когда вы случайно или нет отправить на продакшн кусочек код предназначить только для тест или временно вставить крохотный if’чик например с threadsleep или логирование для отладка знать вы не одинокий есть куча реальный задача после решение который на продакшн частенько уезжать тестовый/отладочный код превращаться там в бомба замедлить действие попутно преумножать техдолг и пятно на карма разработчик в доклад мы по косточка разобрать подход side effect injection который позволить вы внедрять в тестировать приложение почти любой поведение задержка заглушка логирование обход безопасность и тд но при это не пачкать репозиторий грязный хаками и даже не пересобирать сам приложение в ход разбор полюбоваться вариант компиляция java-код расковырять один кейс модификация байт-код в jvm препарировать формальный грамматик java а затем поиграть с весь это на пример реальный приложение владимир плизга владимир с школьный скамья болеть программирование и с тот пора успеть покодировать на весь от советский программировать калькулятор до современный scada-система в производство но последний 6 год погрузить в разработка бэкенд интернетом-банк и сопутствующий сервис в цфт где активно топить за микросервис и прочий модный штука попутно постоянно заморачиваться идея оптимизация сложный задача разработки/тестирование серверный по вынашивать для они решение на пробежка и в бассейн а затем воплощать они в жизнь бессовестно испытывать на собственный коллега как генератор тест помочь стабилизировать компилятор в zing vm стабильность и функциональный корректность — это то что ждать пользователь java-машина а ещё они ждать что скомпилировать они код быть работать быстро для это существовать компиляторный оптимизация но чем агрессивный они улучшать код тем большой проблема в они мочь быть скрытый так как же помирить такой противоречивый цель как скорость и корректность скомпилировать код особенно если ваш компилятор основать на llvm и в он вливаться десятка тысяча строка изменение каждый неделя как находить скрытый баг у себя дом до тот как пользователь наткнуться на один из они в это доклад мы рассказать как мы искать функциональный проблема в компилятор java-машина zing использовать автоматический генератор тестовый программа на язык java максим казанцев инженер компилятор в azul systems последний 4 год заниматься оптимизировать jit-компилятор для виртуальный машина с 2017 год работать над zing vm активно коммитит в llvm до это работать над виртуальный машина art и dalvik в компания intel внести свой вклад в android open source project на путь к быстрый многопоточный хеш-таблица хеш-таблица — вероятно самый использовать на сегодняшний день структура дать от производительность который зависеть многие компонента приложение однако так ли просто написать быстрый реализация использовать весь мощь многоядерный архитектура и насколько эффективный стандартный решение в java ответ на этот и другой вопрос мы постараться получить в рамка доклад в поиск ответ коснуться как теоретический аспект так и некоторый практический подход к построение высокопроизводительный алгоритм никита коваль никита — инженер-исследователь в исследовательский группа dxlab компания devexperts помимо это он студент кафедра компьютерный технология в итмый где к тот же преподавать курс по многопоточный программирование главное образ интересоваться многопоточный алгоритм верификация программа и они анализ смузи ml вместе с spark mllib в направление bigdata требоваться не только data scientist-ы тюнить параметр модель из пакет на r/python но и джавист который способный понять построить модель воплотить они на java/scala в тот число при помощь spark mllib давать начать знакомство с этот самый мощный библиотека распределенный машинный обучение заодно обсудить особенность использование стандартный алгоритм машинный обучение и структура дать в spark алексей зиновьев харон в греческий мифология — перевозчик душа умерший через река стикс из java в big data если говорить простой то практиковать тренер в компания epam systems с hadoop/spark и прочий бигдата дружить с 2012 год форкаяться и пуллреквестить с 2014 рассказывать с 2015 особенно любить текстовый дать и большой граф строить криптотрейдинг-платформа использовать spring 5 и reactor 3 в доклад подробно рассмотреть reactive-подход с spring 5 и reactor 3 и показать как построить/перенести reactive system на новый reactive stack рассказать о общий потребность бизнес где этот техника работать хороший всего и помогать решить сложный задача наиболее эффективно в время доклад мы построить криптотрейдинг-платформа сначала мы проанализировать дизайн стандартный приложение он плюс и недостаток затем оптимизировать существующий архитектура и построить реактивный решение использовать стек современный технология spring 5 и reactor 3 олег докука инженер по уже более 7 год заниматься разработка по в различный область в последний время активно разрабатывать корпоративный по и распределить система в основное использовать стек spring с самый начало разработка spring 5 внимательно следить за развитие фреймворка и активно продвигать reactive-решение основать на spring 5 и reactor 3 публика кроме тот олег — коммитереть reactor 3 а также спикер такой конференция как jeeconf и javaday ukraine в свободный время писать книга «reactive programming with spring 5 ml pipelines в одноклассник в рамка доклад мы рассмотреть основный архитектура библиотека машинный обучение spark ml а также особенность её использование для решение реальный задача с обработка больший объём дать особый внимание уделить ряд ограничение усложнять применение библиотека и рассказать о тот какой расширение для стандартный элемент прийтись разработать чтобы этот ограничение обойти и полноценно раскрыть потенциал массивный распределить машинный обучение работа стандартный библиотека и её расширение продемонстрировать на пример задача ранжирование новостной лента в социальный сеть одноклассник доклад быть полезный разработчик инженер дать и аналитик использовать метод машинный обучение и платформа распределенный обработка информация дмитрий бугайченко закончить санкт-петербургский государственный университет в 2004 год там же защитить кандидатский по формально-логический метод в 2007 почти 9 год проработать в аутсорсинг не терять контакт с университет и научный среда анализ больший дать в одноклассник стать для дмитрия уникальный шанс совместить теоретический подготовка и научный фундамент с разработка реальный востребовать продукт и это шанс он с радость воспользоваться прийти туда пять год назад class data sharing in the hotspot vm class data sharing cds — фич появиться в java 5 и предназначить для улучшение скорость загрузка и уменьшение количество использовать оперативный память java-приложение который осуществляться путём хранение предварительно обработать метаинформация о системный класс на диск с возможность использовать этот дать в несколько jvm одновременно в течение последний год cds постоянно улучшаться в openjdk 10 этот функциональность быть расширить с помощь appcds — фич который позволять пользоваться класс приложение несколько экземпляр vm одновременно дробный можно прочитать в jep 310 «application class-data sharing в это доклад фолькер кратко рассказать про cds и appcds показать как они можно использовать несмотря на то что cds весьма хорошо документировать appcds для класс приложение и самописный класслоадер требовать большой количество ручной работа поэтому фолькер собираться продемонстрировать мы небольшой утилит позволять автоматизировать этот задача после демонстрация конкретный цифра сколько использоваться оперативный память какой быстродействие фолькер показать мы глубинный деталь реализация и рассказать о возникать проблема и наконец мы обзорный пройтись по вопрос вроде хранение строка и символ в архив cds и как они можно раскидывать по несколько виртуальный машина начинать с openjdk 9 в результат аудитория получить более глубокий понимание cds/appcds и смочь понять стоить ли использовать этот технология для свой приложение фолькер симонис фолькер симонис работать в sap jvm technology group он быть один из один контрибуторов в openjdk помогать sap участвовать в это проект он — лидер проект openjdk powerpc/aix и проект по портирование на s390x а также являться ревьюер в jdk и представитель sap в jcp executive committee кроме тот он член экспертный группа jcp jsr 379 java se 9 jsr 383 java se 10 и jsr 384 java se 11 реактивный программирование на vertx надоесть отлаживать критический секция в сто один раз хотеться писать полезный код а не решать проблема с гонка поток мочь стоить попробовать что-то новое vertx совершенно не похожий на старый добрый spring и java ee в это он сила это таить сложность легко написать код который тяжело поддерживать с другой сторона иметь опыт vertx превращаться в удобный инструмент разработка а как после это запускать приложение на vertx в промышленный среда доклад быть полезный тем кто хотеть бы начать использовать vertx но не знать с какой сторона подойти антон ленка инженер-программист в сбербанк-технология разрабатывать серверный часть для сбербанк онлайн в свой проект внедрять решение делать жизнь инженер весёлый elk docker kubernetes реактивный программирование и тд эксплуатация imdg с сторона dev и ops вначале рассказать в два слово о общий схема по на который произойти миграция а также о самый миграция в целое обсудить ignite проблема он внедрение и возможный решение поговорить о анализ и решение проблема с ускорение работа клиентский узел о изменение нежелательный при сериализация полый о проблема изменение тип сущность и о повышение надёжность при работа с локальный кэш алексей шарап алексей нести devops-культура в мир java-программист компания сбербанк-технология заниматься сборка и инфраструктура он стараться сделать мир хороший а работа девелоперов — простой сбербанк-технология стать для алексей уникальный шанс быть один из первооткрыватель в рамка переход к гибкий методология разработка в такой негибкий сфера как банковский в рамка это переход алексей удаться максимально близко пощупать весь стек in-memory data grid-решение о чем собственно он и хотеть рассказать заключение как видеть программа получиться просто отменный если захотеть прийти на конференция то билет можно приобрести по этот ссылка встретиться на jbreak 2018 